server:
  name: Charles
  port: 8083
  servlet:
    context-path: /demo

spring:
  rabbitmq:
    host: localhost
    port: 5672
    username: forwsl
    password: forwsl
    listener:
      simple:
        concurrency: 10
        max-concurrency: 50
        prefetch: 5

  devtools:
    restart:
      enabled: true  #设置开启热部署

  datasource:
    data1:
      username: root
      password: 233666
      jdbc-url: jdbc:mysql://localhost:3306/charles?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&failOverReadOnly=false
      driver-class-name: com.mysql.jdbc.Driver
      type: com.alibaba.druid.pool.DruidDataSource

      # 连接池的配置信息
      filters: stat
      maxActive: 20
      initialSize: 1
      maxWait: 60000
      minIdle: 1
      timeBetweenEvictionRunsMillis: 60000
      minEvictableIdleTimeMillis: 300000
      validationQuery: select 'x'
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      poolPreparedStatements: true
      maxOpenPreparedStatements: 20

    data2:
      username: root
      password: 233666
      jdbc-url: jdbc:mysql://localhost:3306/charles?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&failOverReadOnly=false
      driver-class-name: com.mysql.jdbc.Driver
      type: com.alibaba.druid.pool.DruidDataSource
#      username: root
#      password: 233666
#      jdbc-url: jdbc:mysql://localhost:3306/system?useSSL=false&useUnicode=true&characterEncoding=utf8
#      driver-class-name: com.mysql.cj.jdbc.Driver
#      type: com.alibaba.druid.pool.DruidDataSource

      # 连接池的配置信息
      filters: stat
      maxActive: 20
      initialSize: 1
      maxWait: 60000
      minIdle: 1
      timeBetweenEvictionRunsMillis: 60000
      minEvictableIdleTimeMillis: 300000
      validationQuery: select 'x'
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      poolPreparedStatements: true
      maxOpenPreparedStatements: 20

  redis:
    jedis:
      pool:
        max-active: 100
        max-wait: 10000
        max-idle: 10
    host: localhost #在服务端发布URL
    #host: 192.168.1.4 #在编码端测试URL
    port: 6379
    timeout: 1000

logging:
  pattern:
    console: "%d{yyyy-MM-dd HH:mm} [%thread] %-5level %logger{50} - %msg%n"
    max-history: 30
    max-size: 10MB
  level:
    com:
      charles:
        demo:
          # 在DAO层 设置日志等级为debug 可以轻易查出程序问题所在
          data1:
            mapper: debug
          data2:
            mapper: debug
    root: INFO
  file:
    path: logs

pagehelper:
  helperDialect: mysql
  reasonable: true  #开启优化，如果开启优化，在分页页码结果没有数据的时候,会显示有数据的页码数据
  supportMethodsArguments: true #是否支持接口参数来传递分页参数，默认false
  pageSizeZero: false #pageSize=0 返回所有
  params: count=countSql

log:
  user:
    queue:
      name: ${spring.rabbitmq.host}.log.user.queue

    exchange:
      name: ${spring.rabbitmq.host}.log.user.exchange

    routing:
      key:
        value: ${spring.rabbitmq.host}.log.user.routing.key